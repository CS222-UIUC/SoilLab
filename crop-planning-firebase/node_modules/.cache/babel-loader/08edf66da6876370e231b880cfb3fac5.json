{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjQvvfI5xBatNheTNM5Lja-A40ed1oqk8\",\n  authDomain: \"crop-planning222.firebaseapp.com\",\n  databaseURL: \"https://crop-planning222-default-rtdb.firebaseio.com\",\n  projectId: \"crop-planning222\",\n  storageBucket: \"crop-planning222.appspot.com\",\n  messagingSenderId: \"269932947742\",\n  appId: \"1:269932947742:web:06e964b5e5a18c3071810f\",\n  measurementId: \"G-BFKKZYRKR5\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport { auth, db, signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"sources":["/Users/anjanagulapalyam/Documents/cs222/course-project-group-77/crop-planning-firebase/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjQvvfI5xBatNheTNM5Lja-A40ed1oqk8\",\n  authDomain: \"crop-planning222.firebaseapp.com\",\n  databaseURL: \"https://crop-planning222-default-rtdb.firebaseio.com\",\n  projectId: \"crop-planning222\",\n  storageBucket: \"crop-planning222.appspot.com\",\n  messagingSenderId: \"269932947742\",\n  appId: \"1:269932947742:web:06e964b5e5a18c3071810f\",\n  measurementId: \"G-BFKKZYRKR5\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}